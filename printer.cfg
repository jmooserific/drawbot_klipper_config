[mcu]
# You may need to change this.
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
# Has to be the same as in firmware
baud: 250000

[virtual_sdcard]
path: ~/gcode_files

[printer]
kinematics: corexy
# Current values are quite slow, you may try to find values that are the best for your drawbot
# Units: mm/s and mm/s^2
max_velocity: 400
max_accel: 1000

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[stepper_x]
step_pin: PF0
dir_pin: !PF1
enable_pin: !PD7
microsteps: 16
rotation_distance: 32
endstop_pin: tmc2209_stepper_x:virtual_endstop
homing_retract_dist: 0
position_endstop: 0
position_max: 360
homing_speed: 16

[tmc2209 stepper_x]
uart_pin: PK1
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999
diag_pin: ^PE5      # Set to MCU pin connected to TMC DIAG pin
driver_SGTHRS: 70   # 255 is most sensitive value, 0 is least sensitiv      # Set to MCU pin connected to TMC DIAG pin

[stepper_y]
step_pin: PF6
dir_pin: !PF7
enable_pin: !PF2
microsteps: 16
rotation_distance: 32
endstop_pin: tmc2209_stepper_y:virtual_endstop
homing_retract_dist: 0
# No need to set home direction manually: Klipper understands correct direction by seeing that position_endstop = position_max
position_endstop: 0
position_max: 220
homing_speed: 16

[tmc2209 stepper_y]
uart_pin: PK2
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999
diag_pin: ^PJ1      # Set to MCU pin connected to TMC DIAG pin
driver_SGTHRS: 70  # 255 is most sensitive value, 0 is least sensitiv

# Klipper requires stepper_z to be present
[stepper_z]
step_pin: PL3
dir_pin: PL1
enable_pin: !PK0
microsteps: 16
rotation_distance: 32
endstop_pin: ^PD3
position_endstop: 0
position_max: 200
homing_speed: 50

# For the SG90 servo
[servo pen]
pin: PB5
maximum_servo_angle: 60
minimum_pulse_width: 0.001
maximum_pulse_width: 0.002
initial_angle: 40

[gcode_macro PEN_UP]
gcode:
  SET_SERVO SERVO=pen ANGLE=0
  G4 P50

[gcode_macro PEN_DOWN]
gcode:
  SET_SERVO SERVO=pen ANGLE=60
  G4 P50

# Add support for G2 and G3 commands
[gcode_arcs]
resolution: 1.0

[display_status]

[pause_resume]

# Cancelling drawing works without this macro, but fluidd will complain
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  BASE_CANCEL_PRINT

[homing_override]
gcode:
  G90
  # Home Y
  G28 Y0
  G1 Y5 F1200
  # Home X
  G4 P2000
  G28 X0
  G1 X5 F1200

[gcode_macro START_PRINT]    
gcode:
  pen_up
  G28

[gcode_macro END_PRINT]
gcode:
  pen_up
  G28
  pen_down
  G4 P2000
  # Disable steppers
  M84

[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G90
    G1 X{X} Y{Y} F3000
    G91
    RESTORE_GCODE_STATE NAME=M600_state